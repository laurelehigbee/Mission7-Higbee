@page "/admin/orders" 
@inherits OwningComponentBase<IPurchaseRepository>

<OrderTable TableTitle="UncollectedPurchases"  Purchases="UncollectedPurchases"
            ButtonLabel="Collected" PurchaseSelected="CollectPurchase"></OrderTable>

<OrderTable TableTitle="CollectedPurchases" Purchases="CollectedPurchases"
            ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></OrderTable>

<button class="btn btn-info" @onclick="@(x=>UpdateData())">Refresh Data</button>

@code 
{
    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase>UncollectedPurchases { get; set; }
    public IEnumerable<Purchase> CollectedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        UncollectedPurchases = AllPurchases.Where(x => !x.OrderReceived);
        CollectedPurchases = AllPurchases.Where(x => x.OrderReceived);
    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase(int id, bool purchased)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x => x.BookId == id);
        p.OrderReceived = purchased;
        repo.SavePurchase(p);
    }
}